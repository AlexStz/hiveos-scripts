#!/usr/bin/env bash

# pre-requisite

set -u
source colors


# consts

declare -r speed_prefix_RE='Speed '$'\e''\[1;36m[0-9]{1,5}\.[0-9]{2}'
declare -r single_gpu_RE='gpu[0-9]{,2} '$'\e''\[36m[0-9]{1,5}\.[0-9]{2}'
declare -r zero_hashrate_RE='m0\.00'
declare -r three_figures_hashrate_RE='m[0-9]{3}\.[0-9]{2}'


# vars

declare global_RE="($speed_prefix_RE)"


# functions

print_incorrect_shares() {
	# args
	local file="$1"
	# vars
	local grep_answer=''
	# code
	if grep_answer="$( echo -n 'Incorrect shares: '; grep --color=never 'incorrect' "$file" )"; then
		echo -e "$grep_answer"
		return 1
	fi
}

print_fallen_gpus() {
	# args
	local file="$1"
	# vars
	local line=''
	local -a line_array=()
	local fallen_gpu_found='false'
	# code
	while read -r line; do
		if [[ "$line" =~ $global_RE ]]; then
			line_array=( "${BASH_REMATCH[@]}" )
			if [[ "${line_array[1]}" =~ $three_figures_hashrate_RE ]]; then
				if [[ "${line_array[*]}" =~ $zero_hashrate_RE ]]; then
					fallen_gpu_found='true'
					printf 'Fallen gpu: %s' "${line_array[1]}"
					for (( i=2; i <= ${#line_array[@]}; i++)); do
						if [[ "${line_array[i]-}" =~ $zero_hashrate_RE ]]; then
							printf ' [%s]' "${line_array[i]}"
							#echo "$line"
						fi
					done
					printf '%b\n' "${NOCOLOR}"
				fi
			fi
		fi
	done <<< "$( grep --color=never "$zero_hashrate_RE" "$file" )"

	if [[ "$fallen_gpu_found" == 'true' ]]; then
		return 1
	fi
}

print_string_if_not_empty() {
	local string="${1-}"
	if [[ -n "$string" ]]; then
		echo -e "$string"
	fi
}

# code

for loop in {1..13}; do # make 13 capture groups for each GPU
	global_RE+=".+($single_gpu_RE)"
done

for file in /var/log/miner/ethminer/ethminer.{5..1}.log /var/log/miner/ethminer/ethminer.log ; do
	something_bad_happens='false'
	echo -e -n "${DGRAY}Processing $file${NOCOLOR}"

	if [[ -f "$file" ]]; then
		incorrect_shares="$( print_incorrect_shares "$file" )" || something_bad_happens='true'
		fallen_gpus="$( print_fallen_gpus "$file" )" || something_bad_happens='true'

		if [[ "$something_bad_happens" == 'true' ]]; then
			echo -e "${DGRAY}:${NOCOLOR}"
			print_string_if_not_empty "$incorrect_shares"
			print_string_if_not_empty "$fallen_gpus"
			echo
		else
			echo -e "${DGRAY}... No errors, skipping.${NOCOLOR}"
		fi
	else
		echo -e "${DGRAY}... ${RED}File not found, skipping.${NOCOLOR}"
	fi
done
