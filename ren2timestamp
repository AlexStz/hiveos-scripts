#!/usr/bin/env bash

. "$(dirname "$0")/functions.sh" # use library


#
# script inventory stuff
#

script_version='0.1.6'
script_description='Add timestamp to t-rex log filename'
script_usage='logs_to_rename'


#
# variables
#

DEBUG=
declare -i total_counter=''
declare -i mv_counter=''


#
# main()
#

print_script_version

if is_variable_not_empty "$*"; then
	logs="$*"
else
	print_script_usage
	exit
fi

grep_pattern='^[0-9]{8} [0-9]{2}:[0-9]{2}'
sed_pattern='s/://;s/ /./'
matched_logs=$(grep --extended-regexp --files-with-matches --directories=skip "$grep_pattern" $logs 2>/dev/null) # why 2>/dev/null?

if is_variable_empty "$matched_logs"; then
	echo "$logs: no suitable logs found. Exiting."
	echo
	exit
fi

# for pretty-printing
longest_filename_lenght="$(ls -1 $matched_logs | wc -L)"

for log in $matched_logs; do
	(( ++total_counter ))
	start_date=$(grep --extended-regexp --only-matching --max-count=1 "$grep_pattern" "$log" | sed "$sed_pattern")
	stop_date=$(tac "$log" | grep --extended-regexp --only-matching --max-count=1 "$grep_pattern" | sed "$sed_pattern")
	log_path="$(dirname $log)"
	new_name="$log_path/$HOSTNAME($start_date-$stop_date)t-rex.log"

	if is_file_not_exist "$new_name"; then
		(( ++mv_counter ))
		printf "%-${longest_filename_lenght}.${longest_filename_lenght}s -> %s" $log $new_name
		mv --no-clobber "$log" "$new_name" && echo '. Done.' || echo '. Error.'
	else
		#echo '. File already exist.'
		:
	fi
done
echo "Processed $mv_counter/$total_counter file(s)."
